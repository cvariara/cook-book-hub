generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  email        String         @unique
  username     String         @unique
  password     String
  avatar       String?
  createdAt    DateTime       @default(now())
  reviews      Review[]
  recipes      Recipe[]
  savedRecipes SavedRecipe[]
}

model Recipe {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  img          String
  createdAt    DateTime       @default(now())
  user         User           @relation(fields: [userId], references: [id])
  userId       String         @db.ObjectId
  recipeInfo   RecipeInfo?
  reviews      Review[]
  savedRecipes SavedRecipe[]
}

model RecipeInfo {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  servings    Int
  prepTime    Int
  cookTime    Int
  calories    Int?
  fat         Int?
  carbs       Int?
  protein     Int?
  description String
  ingredients String[]
  steps       String[]
  recipe      Recipe   @relation(fields: [recipeId], references: [id])
  recipeId    String   @unique @db.ObjectId
}

model Review {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  rating    Int
  comment   String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  recipe    Recipe   @relation(fields: [recipeId], references: [id])
  recipeId  String   @unique @db.ObjectId

  @@unique([userId, recipeId])
}

model SavedRecipe {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  recipe    Recipe   @relation(fields: [recipeId], references: [id])
  recipeId  String   @unique @db.ObjectId
  createdAt DateTime @default(now())

  @@unique([userId, recipeId])
}
