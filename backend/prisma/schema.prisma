// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  username  String   @unique
  password  String
  avatar    String?
  createdAt DateTime @default(now())
  reviews   Review[]
  recipes   Recipe[]
}

model Recipe {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  img        String
  createdAt  DateTime    @default(now())
  user       User        @relation(fields: [userId], references: [id])
  userId     String      @db.ObjectId
  recipeInfo RecipeInfo?
  reviews    Review[]
}

model RecipeInfo {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  servings    Int
  prepTime    Int
  cookTime    Int
  calories    Int?
  fat         Int?
  carbs       Int?
  protein     Int?
  description String
  ingredients String[]
  steps       String[]
  recipe      Recipe   @relation(fields: [recipeId], references: [id])
  recipeId    String   @unique @db.ObjectId
}

model Review {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  rating    Int
  comment   String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  recipe    Recipe   @relation(fields: [recipeId], references: [id])
  recipeId  String   @unique @db.ObjectId
}
